{"version":3,"sources":["Header/Header.tsx","MainContent/MainContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","brand","useRef","useEffect","gsap","from","current","duration","x","ease","className","ref","MainContent","maintxt","y","to","scrollTrigger","trigger","markers","rotation","App","header","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","registerPlugin","ScrollTrigger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAqBeA,EAhBA,SAACC,GACd,IAAMC,EAAQC,iBAAO,MAIrB,OAHAC,qBAAU,WACRC,IAAKC,KAAKJ,EAAMK,QAAS,CAAEC,SAAU,EAAGC,EAAG,QAASC,KAAM,cACzD,IAED,qBAAKC,UAAU,+BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAMC,IAAKV,EAAOS,UAAU,eAA5B,yBCkBOE,EA1BK,SAACZ,GACnB,IAAMa,EAAUX,iBAAO,MAevB,OAdAC,qBAAU,WACRC,IAAKC,KAAKQ,EAAQP,QAAS,CAAEC,SAAU,EAAGO,EAAG,QAASL,KAAM,YAC5DL,IAAKW,GAAGF,EAAQP,QAAS,CACvBU,cAAe,CACbC,QAASJ,EAAQP,QAGjBY,SAAS,GAEXX,SAAU,EACVY,SAAU,IACVV,KAAM,WAEP,IAED,qCACE,oBAAIE,IAAKE,EAASH,UAAU,cAA5B,0BAGA,wCCFSU,EAlBH,WACV,IAAMC,EAASnB,iBAAO,MAKtB,OAJAC,qBAAU,WACRC,IAAKC,KAAKgB,EAAOf,QAAS,CAAEC,SAAU,EAAGe,MAAO,SAChDlB,IAAKC,KAAKgB,EAAOf,QAAS,CAAEC,SAAU,EAAGC,EAAG,QAASC,KAAM,cAC1D,IAED,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,UCJOa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdpB,IAAK4B,eAAeC,KAEpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.0c6a5cdb.chunk.js","sourcesContent":["import { gsap } from 'gsap';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Header = (props: Props) => {\r\n  const brand = useRef(null);\r\n  useEffect(() => {\r\n    gsap.from(brand.current, { duration: 2, x: '+=100', ease: 'elastic' });\r\n  }, []);\r\n  return (\r\n    <nav className='navbar navbar-light bg-light'>\r\n      <div className='container'>\r\n        <span ref={brand} className='navbar-brand'>\r\n          NavBar\r\n        </span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { gsap } from 'gsap';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst MainContent = (props: Props) => {\r\n  const maintxt = useRef(null);\r\n  useEffect(() => {\r\n    gsap.from(maintxt.current, { duration: 2, y: '+=100', ease: 'elastic' });\r\n    gsap.to(maintxt.current, {\r\n      scrollTrigger: {\r\n        trigger: maintxt.current,\r\n        // start: 'top center',\r\n        // end: 'top 100px',\r\n        markers: true,\r\n      },\r\n      duration: 3,\r\n      rotation: 360,\r\n      ease: 'none',\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1 ref={maintxt} className='text-center'>\r\n        Main Content\r\n      </h1>\r\n      <div>1</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","import { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport './App.css';\nimport Header from './Header/Header';\nimport MainContent from './MainContent/MainContent';\n\nconst App = () => {\n  const header = useRef(null);\n  useEffect(() => {\n    gsap.from(header.current, { duration: 2, color: '#000' });\n    gsap.from(header.current, { duration: 2, x: '+=100', ease: 'elastic' });\n  }, []);\n  return (\n    <div className='container-fluid'>\n      <div className='row'>\n        <Header />\n      </div>\n      <div className='row'>\n        <MainContent />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}